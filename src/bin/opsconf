#!/bin/bash -e

if [ -z ${OPSCONF_DIR+x} ] ; then
    export OPSCONF_DIR="/usr/share/opsconf"
fi

PROGRAMNAME=$(basename "$0")

function _show_help() {
    exitcode=$1
    cat <<EOF
$PROGRAMNAME: Configuration management tool for operational data.

Arguments (to work on files)
    sync: synchronize local and distant repositories
    commit: commit changes to a file
    log: show changelogs of a file
    diff: show difference between two versions of a file
    rollback: rollback a file to a given versions
    qualify: mark a file version as ready for qualification
    validate: mark a file version as validated of production use

Arguments (to work on the repository)
    init: initialize the local repository
    liststates: list the repository states
    checkout: get to a given repository state
    tag: label the current state of the whole repository

Other possible arguments
    help: show this help
EOF
    exit $exitcode
}

function _is_opsconf_repo() {
    # Check that this is a git repo and that the hooks are installed
    # If the hooks are missing, opsconf won't work correctly, so we abort
    if [[ ! $(is_git_repo) || ! $(has_uptodate_hooks) ]] ; then
        log_error "This folder is not a git repository or is missing its hooks. Run 'opsconf init'."
        return 1
    fi
}

function main() {
    . $OPSCONF_DIR/libs/libopsconf 

    if [ "$#" -eq 0 ]; then
        _show_help 1
    fi

    subcommand=$1
    shift
    case "$subcommand" in
        "init" )
            . $OPSCONF_DIR/opsconf-init ;;
        "sync")
            . $OPSCONF_DIR/opsconf-sync ;;
        "commit")
            . $OPSCONF_DIR/opsconf-commit ;;
        "log")
            . $OPSCONF_DIR/opsconf-log ;;
        "diff")
            . $OPSCONF_DIR/opsconf-diff ;;
        "rollback")
            . $OPSCONF_DIR/opsconf-rollback ;;
        "qualify")
            . $OPSCONF_DIR/opsconf-qualify ;;
        "validate")
            . $OPSCONF_DIR/opsconf-validate ;;
        "tag")
            . $OPSCONF_DIR/opsconf-tag ;;
        "liststates")
            . $OPSCONF_DIR/opsconf-liststates ;;
        "checkout")
            . $OPSCONF_DIR/opsconf-checkout ;;
        "help")
            _show_help 0 ;;
        *)
            _show_help 1 ;;
    esac

    run_cmd "$@" 

}

main "$@"
