#!/usr/bin/env python3

# SPDX-FileCopyrightText: 2025 Olivier Churlaud <olivier@churlaud.com>
# SPDX-FileCopyrightText: 2025 CNES
#
# SPDX-License-Identifier: MIT

# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# This pushes the changes to the default remote.
#
# OPSCONFVERSION=0.4.0

import logging
import sys

import opsconf
from opsconf import libgit

format = '[%(levelname)s] %(message)s'
logging.basicConfig(format=format)
LOGGER = logging.getLogger('opsconf')

# If current branch not in work, qualification, master, do not enforce the hook
if libgit.getCurrentBranch() not in [opsconf.OPSCONF_BRANCH_WORK, opsconf.OPSCONF_BRANCH_QUALIF, opsconf.OPSCONF_BRANCH_VALID]:
    sys.exit(0)

try:
    opsconf.doPush()
except opsconf.OpsconfFatalError as e:
    LOGGER.error(e)
    sys.exit(1)
