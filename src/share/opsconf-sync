#!/bin/bash -e

_show_help() {
    exitcode=$1
    cat <<EOF
opsconf sync [REMOTE]: synchronize the local and distant repositories (origin by default)
EOF
    exit "$exitcode"
}

run_cmd() {
    if [ $# -eq 1 ] && [ "$1" = "help" ]; then
        _show_help 0
    else
        _show_help 1
    fi
    remote="origin"

    branch=$(git_current_branch)

    # Synchronize with remote
    git fetch "$remote" "$branch"

    log_debug "Comparing $remote/$branch to $branch"

    # Check if the merge would be fast-forward, to merge (fetch+merge=pull)
    if git merge-base --is-ancestor "$branch" "$remote/$branch" ; then
        log_info "Local is behind the remote repository"
        git merge "$remote/$branch" --ff-only
        log_info "Local was updated"
    # Or the reverse (so push)
    elif git merge-base --is-ancestor "$remote/$branch" "$branch" ; then
        log_info "Local is ahead the remote repository"
        git_push "$branch"
        log_info "Remote was updated"
    else
        log_error "Local and remote branchs have diverged. Call an expert!"
    fi
}
